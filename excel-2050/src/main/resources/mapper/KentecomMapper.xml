<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kente.demo.dao.KentecomMapper">
  <resultMap id="BaseResultMap" type="com.kente.demo.pojo.Kentecom">
    <!--@mbg.generated-->
    <!--@Table kentecom-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="mouth" jdbcType="VARCHAR" property="mouth" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="business_creater" jdbcType="VARCHAR" property="businessCreater" />
    <result column="tech_creater" jdbcType="VARCHAR" property="techCreater" />
    <result column="industry" jdbcType="VARCHAR" property="industry" />
    <result column="lv" jdbcType="VARCHAR" property="lv" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="pro_name" jdbcType="VARCHAR" property="proName" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="customer" jdbcType="VARCHAR" property="customer" />
    <result column="need_num" jdbcType="VARCHAR" property="needNum" />
    <result column="need_price" jdbcType="VARCHAR" property="needPrice" />
    <result column="after_result" jdbcType="VARCHAR" property="afterResult" />
    <result column="after_price" jdbcType="VARCHAR" property="afterPrice" />
    <result column="after_reason" jdbcType="VARCHAR" property="afterReason" />
    <result column="after_company" jdbcType="VARCHAR" property="afterCompany" />
    <result column="price" jdbcType="VARCHAR" property="price" />
    <result column="can_not_reason" jdbcType="VARCHAR" property="canNotReason" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="sale_area" jdbcType="VARCHAR" property="saleArea" />
    <result column="sale_man" jdbcType="VARCHAR" property="saleMan" />
    <result column="task_id" jdbcType="INTEGER" property="taskId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, mouth, `date`, business_creater, tech_creater, industry, lv, `type`, pro_name, 
    `name`, customer, need_num, need_price, after_result, after_price, after_reason, 
    after_company, price, can_not_reason, department, sale_area, sale_man, task_id
  </sql>
  <select id="selectByExample" parameterType="com.kente.demo.pojo.KentecomExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kentecom
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from kentecom
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from kentecom
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kente.demo.pojo.KentecomExample">
    <!--@mbg.generated-->
    delete from kentecom
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.kente.demo.pojo.Kentecom" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into kentecom (mouth, `date`, business_creater, 
      tech_creater, industry, lv, 
      `type`, pro_name, `name`, 
      customer, need_num, need_price, 
      after_result, after_price, after_reason, 
      after_company, price, can_not_reason, 
      department, sale_area, sale_man, 
      task_id)
    values (#{mouth,jdbcType=VARCHAR}, #{date,jdbcType=VARCHAR}, #{businessCreater,jdbcType=VARCHAR}, 
      #{techCreater,jdbcType=VARCHAR}, #{industry,jdbcType=VARCHAR}, #{lv,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{proName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{customer,jdbcType=VARCHAR}, #{needNum,jdbcType=VARCHAR}, #{needPrice,jdbcType=VARCHAR}, 
      #{afterResult,jdbcType=VARCHAR}, #{afterPrice,jdbcType=VARCHAR}, #{afterReason,jdbcType=VARCHAR}, 
      #{afterCompany,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, #{canNotReason,jdbcType=VARCHAR}, 
      #{department,jdbcType=VARCHAR}, #{saleArea,jdbcType=VARCHAR}, #{saleMan,jdbcType=VARCHAR}, 
      #{taskId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.kente.demo.pojo.Kentecom" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into kentecom
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mouth != null">
        mouth,
      </if>
      <if test="date != null">
        `date`,
      </if>
      <if test="businessCreater != null">
        business_creater,
      </if>
      <if test="techCreater != null">
        tech_creater,
      </if>
      <if test="industry != null">
        industry,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="proName != null">
        pro_name,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="customer != null">
        customer,
      </if>
      <if test="needNum != null">
        need_num,
      </if>
      <if test="needPrice != null">
        need_price,
      </if>
      <if test="afterResult != null">
        after_result,
      </if>
      <if test="afterPrice != null">
        after_price,
      </if>
      <if test="afterReason != null">
        after_reason,
      </if>
      <if test="afterCompany != null">
        after_company,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="canNotReason != null">
        can_not_reason,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="saleArea != null">
        sale_area,
      </if>
      <if test="saleMan != null">
        sale_man,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mouth != null">
        #{mouth,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="businessCreater != null">
        #{businessCreater,jdbcType=VARCHAR},
      </if>
      <if test="techCreater != null">
        #{techCreater,jdbcType=VARCHAR},
      </if>
      <if test="industry != null">
        #{industry,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="proName != null">
        #{proName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="customer != null">
        #{customer,jdbcType=VARCHAR},
      </if>
      <if test="needNum != null">
        #{needNum,jdbcType=VARCHAR},
      </if>
      <if test="needPrice != null">
        #{needPrice,jdbcType=VARCHAR},
      </if>
      <if test="afterResult != null">
        #{afterResult,jdbcType=VARCHAR},
      </if>
      <if test="afterPrice != null">
        #{afterPrice,jdbcType=VARCHAR},
      </if>
      <if test="afterReason != null">
        #{afterReason,jdbcType=VARCHAR},
      </if>
      <if test="afterCompany != null">
        #{afterCompany,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="canNotReason != null">
        #{canNotReason,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="saleArea != null">
        #{saleArea,jdbcType=VARCHAR},
      </if>
      <if test="saleMan != null">
        #{saleMan,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kente.demo.pojo.KentecomExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from kentecom
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update kentecom
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mouth != null">
        mouth = #{record.mouth,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        `date` = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.businessCreater != null">
        business_creater = #{record.businessCreater,jdbcType=VARCHAR},
      </if>
      <if test="record.techCreater != null">
        tech_creater = #{record.techCreater,jdbcType=VARCHAR},
      </if>
      <if test="record.industry != null">
        industry = #{record.industry,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.proName != null">
        pro_name = #{record.proName,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.customer != null">
        customer = #{record.customer,jdbcType=VARCHAR},
      </if>
      <if test="record.needNum != null">
        need_num = #{record.needNum,jdbcType=VARCHAR},
      </if>
      <if test="record.needPrice != null">
        need_price = #{record.needPrice,jdbcType=VARCHAR},
      </if>
      <if test="record.afterResult != null">
        after_result = #{record.afterResult,jdbcType=VARCHAR},
      </if>
      <if test="record.afterPrice != null">
        after_price = #{record.afterPrice,jdbcType=VARCHAR},
      </if>
      <if test="record.afterReason != null">
        after_reason = #{record.afterReason,jdbcType=VARCHAR},
      </if>
      <if test="record.afterCompany != null">
        after_company = #{record.afterCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=VARCHAR},
      </if>
      <if test="record.canNotReason != null">
        can_not_reason = #{record.canNotReason,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.saleArea != null">
        sale_area = #{record.saleArea,jdbcType=VARCHAR},
      </if>
      <if test="record.saleMan != null">
        sale_man = #{record.saleMan,jdbcType=VARCHAR},
      </if>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update kentecom
    set id = #{record.id,jdbcType=INTEGER},
      mouth = #{record.mouth,jdbcType=VARCHAR},
      `date` = #{record.date,jdbcType=VARCHAR},
      business_creater = #{record.businessCreater,jdbcType=VARCHAR},
      tech_creater = #{record.techCreater,jdbcType=VARCHAR},
      industry = #{record.industry,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=VARCHAR},
      pro_name = #{record.proName,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      customer = #{record.customer,jdbcType=VARCHAR},
      need_num = #{record.needNum,jdbcType=VARCHAR},
      need_price = #{record.needPrice,jdbcType=VARCHAR},
      after_result = #{record.afterResult,jdbcType=VARCHAR},
      after_price = #{record.afterPrice,jdbcType=VARCHAR},
      after_reason = #{record.afterReason,jdbcType=VARCHAR},
      after_company = #{record.afterCompany,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=VARCHAR},
      can_not_reason = #{record.canNotReason,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      sale_area = #{record.saleArea,jdbcType=VARCHAR},
      sale_man = #{record.saleMan,jdbcType=VARCHAR},
      task_id = #{record.taskId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kente.demo.pojo.Kentecom">
    <!--@mbg.generated-->
    update kentecom
    <set>
      <if test="mouth != null">
        mouth = #{mouth,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        `date` = #{date,jdbcType=VARCHAR},
      </if>
      <if test="businessCreater != null">
        business_creater = #{businessCreater,jdbcType=VARCHAR},
      </if>
      <if test="techCreater != null">
        tech_creater = #{techCreater,jdbcType=VARCHAR},
      </if>
      <if test="industry != null">
        industry = #{industry,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="proName != null">
        pro_name = #{proName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="customer != null">
        customer = #{customer,jdbcType=VARCHAR},
      </if>
      <if test="needNum != null">
        need_num = #{needNum,jdbcType=VARCHAR},
      </if>
      <if test="needPrice != null">
        need_price = #{needPrice,jdbcType=VARCHAR},
      </if>
      <if test="afterResult != null">
        after_result = #{afterResult,jdbcType=VARCHAR},
      </if>
      <if test="afterPrice != null">
        after_price = #{afterPrice,jdbcType=VARCHAR},
      </if>
      <if test="afterReason != null">
        after_reason = #{afterReason,jdbcType=VARCHAR},
      </if>
      <if test="afterCompany != null">
        after_company = #{afterCompany,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="canNotReason != null">
        can_not_reason = #{canNotReason,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="saleArea != null">
        sale_area = #{saleArea,jdbcType=VARCHAR},
      </if>
      <if test="saleMan != null">
        sale_man = #{saleMan,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kente.demo.pojo.Kentecom">
    <!--@mbg.generated-->
    update kentecom
    set mouth = #{mouth,jdbcType=VARCHAR},
      `date` = #{date,jdbcType=VARCHAR},
      business_creater = #{businessCreater,jdbcType=VARCHAR},
      tech_creater = #{techCreater,jdbcType=VARCHAR},
      industry = #{industry,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      pro_name = #{proName,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      customer = #{customer,jdbcType=VARCHAR},
      need_num = #{needNum,jdbcType=VARCHAR},
      need_price = #{needPrice,jdbcType=VARCHAR},
      after_result = #{afterResult,jdbcType=VARCHAR},
      after_price = #{afterPrice,jdbcType=VARCHAR},
      after_reason = #{afterReason,jdbcType=VARCHAR},
      after_company = #{afterCompany,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      can_not_reason = #{canNotReason,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      sale_area = #{saleArea,jdbcType=VARCHAR},
      sale_man = #{saleMan,jdbcType=VARCHAR},
      task_id = #{taskId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update kentecom
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="mouth = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.mouth,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`date` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.date,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="business_creater = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.businessCreater,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="tech_creater = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.techCreater,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="industry = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.industry,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="lv = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.lv,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`type` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.type,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="pro_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.proName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.name,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="customer = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.customer,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="need_num = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.needNum,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="need_price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.needPrice,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="after_result = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.afterResult,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="after_price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.afterPrice,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="after_reason = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.afterReason,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="after_company = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.afterCompany,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.price,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="can_not_reason = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.canNotReason,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="department = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.department,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="sale_area = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.saleArea,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="sale_man = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.saleMan,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="task_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.taskId,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update kentecom
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="mouth = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.mouth != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.mouth,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="`date` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.date != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.date,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="business_creater = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.businessCreater != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.businessCreater,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="tech_creater = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.techCreater != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.techCreater,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="industry = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.industry != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.industry,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="lv = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.lv != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.lv,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="`type` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.type != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.type,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="pro_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.proName != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.proName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.name != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.name,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="customer = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.customer != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.customer,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="need_num = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.needNum != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.needNum,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="need_price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.needPrice != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.needPrice,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="after_result = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.afterResult != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.afterResult,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="after_price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.afterPrice != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.afterPrice,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="after_reason = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.afterReason != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.afterReason,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="after_company = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.afterCompany != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.afterCompany,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.price != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.price,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="can_not_reason = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.canNotReason != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.canNotReason,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="department = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.department != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.department,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="sale_area = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.saleArea != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.saleArea,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="sale_man = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.saleMan != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.saleMan,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="task_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.taskId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.taskId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into kentecom
    (mouth, `date`, business_creater, tech_creater, industry, lv, `type`, pro_name, `name`, 
      customer, need_num, need_price, after_result, after_price, after_reason, after_company, 
      price, can_not_reason, department, sale_area, sale_man, task_id)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.mouth,jdbcType=VARCHAR}, #{item.date,jdbcType=VARCHAR}, #{item.businessCreater,jdbcType=VARCHAR}, 
        #{item.techCreater,jdbcType=VARCHAR}, #{item.industry,jdbcType=VARCHAR}, #{item.lv,jdbcType=VARCHAR}, 
        #{item.type,jdbcType=VARCHAR}, #{item.proName,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, 
        #{item.customer,jdbcType=VARCHAR}, #{item.needNum,jdbcType=VARCHAR}, #{item.needPrice,jdbcType=VARCHAR}, 
        #{item.afterResult,jdbcType=VARCHAR}, #{item.afterPrice,jdbcType=VARCHAR}, #{item.afterReason,jdbcType=VARCHAR}, 
        #{item.afterCompany,jdbcType=VARCHAR}, #{item.price,jdbcType=VARCHAR}, #{item.canNotReason,jdbcType=VARCHAR}, 
        #{item.department,jdbcType=VARCHAR}, #{item.saleArea,jdbcType=VARCHAR}, #{item.saleMan,jdbcType=VARCHAR}, 
        #{item.taskId,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.kente.demo.pojo.Kentecom" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into kentecom
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      mouth,
      `date`,
      business_creater,
      tech_creater,
      industry,
      lv,
      `type`,
      pro_name,
      `name`,
      customer,
      need_num,
      need_price,
      after_result,
      after_price,
      after_reason,
      after_company,
      price,
      can_not_reason,
      department,
      sale_area,
      sale_man,
      task_id,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{mouth,jdbcType=VARCHAR},
      #{date,jdbcType=VARCHAR},
      #{businessCreater,jdbcType=VARCHAR},
      #{techCreater,jdbcType=VARCHAR},
      #{industry,jdbcType=VARCHAR},
      #{lv,jdbcType=VARCHAR},
      #{type,jdbcType=VARCHAR},
      #{proName,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR},
      #{customer,jdbcType=VARCHAR},
      #{needNum,jdbcType=VARCHAR},
      #{needPrice,jdbcType=VARCHAR},
      #{afterResult,jdbcType=VARCHAR},
      #{afterPrice,jdbcType=VARCHAR},
      #{afterReason,jdbcType=VARCHAR},
      #{afterCompany,jdbcType=VARCHAR},
      #{price,jdbcType=VARCHAR},
      #{canNotReason,jdbcType=VARCHAR},
      #{department,jdbcType=VARCHAR},
      #{saleArea,jdbcType=VARCHAR},
      #{saleMan,jdbcType=VARCHAR},
      #{taskId,jdbcType=INTEGER},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      mouth = #{mouth,jdbcType=VARCHAR},
      `date` = #{date,jdbcType=VARCHAR},
      business_creater = #{businessCreater,jdbcType=VARCHAR},
      tech_creater = #{techCreater,jdbcType=VARCHAR},
      industry = #{industry,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      pro_name = #{proName,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      customer = #{customer,jdbcType=VARCHAR},
      need_num = #{needNum,jdbcType=VARCHAR},
      need_price = #{needPrice,jdbcType=VARCHAR},
      after_result = #{afterResult,jdbcType=VARCHAR},
      after_price = #{afterPrice,jdbcType=VARCHAR},
      after_reason = #{afterReason,jdbcType=VARCHAR},
      after_company = #{afterCompany,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      can_not_reason = #{canNotReason,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      sale_area = #{saleArea,jdbcType=VARCHAR},
      sale_man = #{saleMan,jdbcType=VARCHAR},
      task_id = #{taskId,jdbcType=INTEGER},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.kente.demo.pojo.Kentecom" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into kentecom
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="mouth != null">
        mouth,
      </if>
      <if test="date != null">
        `date`,
      </if>
      <if test="businessCreater != null">
        business_creater,
      </if>
      <if test="techCreater != null">
        tech_creater,
      </if>
      <if test="industry != null">
        industry,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="proName != null">
        pro_name,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="customer != null">
        customer,
      </if>
      <if test="needNum != null">
        need_num,
      </if>
      <if test="needPrice != null">
        need_price,
      </if>
      <if test="afterResult != null">
        after_result,
      </if>
      <if test="afterPrice != null">
        after_price,
      </if>
      <if test="afterReason != null">
        after_reason,
      </if>
      <if test="afterCompany != null">
        after_company,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="canNotReason != null">
        can_not_reason,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="saleArea != null">
        sale_area,
      </if>
      <if test="saleMan != null">
        sale_man,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mouth != null">
        #{mouth,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="businessCreater != null">
        #{businessCreater,jdbcType=VARCHAR},
      </if>
      <if test="techCreater != null">
        #{techCreater,jdbcType=VARCHAR},
      </if>
      <if test="industry != null">
        #{industry,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="proName != null">
        #{proName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="customer != null">
        #{customer,jdbcType=VARCHAR},
      </if>
      <if test="needNum != null">
        #{needNum,jdbcType=VARCHAR},
      </if>
      <if test="needPrice != null">
        #{needPrice,jdbcType=VARCHAR},
      </if>
      <if test="afterResult != null">
        #{afterResult,jdbcType=VARCHAR},
      </if>
      <if test="afterPrice != null">
        #{afterPrice,jdbcType=VARCHAR},
      </if>
      <if test="afterReason != null">
        #{afterReason,jdbcType=VARCHAR},
      </if>
      <if test="afterCompany != null">
        #{afterCompany,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="canNotReason != null">
        #{canNotReason,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="saleArea != null">
        #{saleArea,jdbcType=VARCHAR},
      </if>
      <if test="saleMan != null">
        #{saleMan,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="mouth != null">
        mouth = #{mouth,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        `date` = #{date,jdbcType=VARCHAR},
      </if>
      <if test="businessCreater != null">
        business_creater = #{businessCreater,jdbcType=VARCHAR},
      </if>
      <if test="techCreater != null">
        tech_creater = #{techCreater,jdbcType=VARCHAR},
      </if>
      <if test="industry != null">
        industry = #{industry,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="proName != null">
        pro_name = #{proName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="customer != null">
        customer = #{customer,jdbcType=VARCHAR},
      </if>
      <if test="needNum != null">
        need_num = #{needNum,jdbcType=VARCHAR},
      </if>
      <if test="needPrice != null">
        need_price = #{needPrice,jdbcType=VARCHAR},
      </if>
      <if test="afterResult != null">
        after_result = #{afterResult,jdbcType=VARCHAR},
      </if>
      <if test="afterPrice != null">
        after_price = #{afterPrice,jdbcType=VARCHAR},
      </if>
      <if test="afterReason != null">
        after_reason = #{afterReason,jdbcType=VARCHAR},
      </if>
      <if test="afterCompany != null">
        after_company = #{afterCompany,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="canNotReason != null">
        can_not_reason = #{canNotReason,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="saleArea != null">
        sale_area = #{saleArea,jdbcType=VARCHAR},
      </if>
      <if test="saleMan != null">
        sale_man = #{saleMan,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
</mapper>