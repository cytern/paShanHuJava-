<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dam.jsoup.updatereport.updatreport.dao.OrderJsoupMaMapper">
  <resultMap id="BaseResultMap" type="dam.jsoup.updatereport.updatreport.pojo.OrderJsoupMa">
    <!--@mbg.generated-->
    <!--@Table order_jsoup_ma-->
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="owner_user_id" jdbcType="INTEGER" property="ownerUserId" />
    <result column="customer_user_id" jdbcType="INTEGER" property="customerUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="finish_price" jdbcType="DECIMAL" property="finishPrice" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="ma_id" jdbcType="INTEGER" property="maId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    order_id, owner_user_id, customer_user_id, create_time, finish_price, score, ma_id
  </sql>
  <select id="selectByExample" parameterType="dam.jsoup.updatereport.updatreport.pojo.OrderJsoupMaExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_jsoup_ma
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from order_jsoup_ma
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from order_jsoup_ma
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="dam.jsoup.updatereport.updatreport.pojo.OrderJsoupMaExample">
    <!--@mbg.generated-->
    delete from order_jsoup_ma
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="order_id" keyProperty="orderId" parameterType="dam.jsoup.updatereport.updatreport.pojo.OrderJsoupMa" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into order_jsoup_ma (owner_user_id, customer_user_id, create_time, 
      finish_price, score, ma_id
      )
    values (#{ownerUserId,jdbcType=INTEGER}, #{customerUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{finishPrice,jdbcType=DECIMAL}, #{score,jdbcType=INTEGER}, #{maId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="order_id" keyProperty="orderId" parameterType="dam.jsoup.updatereport.updatreport.pojo.OrderJsoupMa" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into order_jsoup_ma
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ownerUserId != null">
        owner_user_id,
      </if>
      <if test="customerUserId != null">
        customer_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="finishPrice != null">
        finish_price,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="maId != null">
        ma_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ownerUserId != null">
        #{ownerUserId,jdbcType=INTEGER},
      </if>
      <if test="customerUserId != null">
        #{customerUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishPrice != null">
        #{finishPrice,jdbcType=DECIMAL},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="maId != null">
        #{maId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="dam.jsoup.updatereport.updatreport.pojo.OrderJsoupMaExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from order_jsoup_ma
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update order_jsoup_ma
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.ownerUserId != null">
        owner_user_id = #{record.ownerUserId,jdbcType=INTEGER},
      </if>
      <if test="record.customerUserId != null">
        customer_user_id = #{record.customerUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishPrice != null">
        finish_price = #{record.finishPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.maId != null">
        ma_id = #{record.maId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update order_jsoup_ma
    set order_id = #{record.orderId,jdbcType=INTEGER},
      owner_user_id = #{record.ownerUserId,jdbcType=INTEGER},
      customer_user_id = #{record.customerUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      finish_price = #{record.finishPrice,jdbcType=DECIMAL},
      score = #{record.score,jdbcType=INTEGER},
      ma_id = #{record.maId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="dam.jsoup.updatereport.updatreport.pojo.OrderJsoupMa">
    <!--@mbg.generated-->
    update order_jsoup_ma
    <set>
      <if test="ownerUserId != null">
        owner_user_id = #{ownerUserId,jdbcType=INTEGER},
      </if>
      <if test="customerUserId != null">
        customer_user_id = #{customerUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishPrice != null">
        finish_price = #{finishPrice,jdbcType=DECIMAL},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="maId != null">
        ma_id = #{maId,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="dam.jsoup.updatereport.updatreport.pojo.OrderJsoupMa">
    <!--@mbg.generated-->
    update order_jsoup_ma
    set owner_user_id = #{ownerUserId,jdbcType=INTEGER},
      customer_user_id = #{customerUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      finish_price = #{finishPrice,jdbcType=DECIMAL},
      score = #{score,jdbcType=INTEGER},
      ma_id = #{maId,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update order_jsoup_ma
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="owner_user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when order_id = #{item.orderId,jdbcType=INTEGER} then #{item.ownerUserId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="customer_user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when order_id = #{item.orderId,jdbcType=INTEGER} then #{item.customerUserId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when order_id = #{item.orderId,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="finish_price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when order_id = #{item.orderId,jdbcType=INTEGER} then #{item.finishPrice,jdbcType=DECIMAL}
        </foreach>
      </trim>
      <trim prefix="score = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when order_id = #{item.orderId,jdbcType=INTEGER} then #{item.score,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="ma_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when order_id = #{item.orderId,jdbcType=INTEGER} then #{item.maId,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where order_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.orderId,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="order_id" keyProperty="orderId" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into order_jsoup_ma
    (owner_user_id, customer_user_id, create_time, finish_price, score, ma_id)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.ownerUserId,jdbcType=INTEGER}, #{item.customerUserId,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.finishPrice,jdbcType=DECIMAL}, #{item.score,jdbcType=INTEGER}, #{item.maId,jdbcType=INTEGER}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="order_id" keyProperty="orderId" parameterType="dam.jsoup.updatereport.updatreport.pojo.OrderJsoupMa" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into order_jsoup_ma
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      owner_user_id,
      customer_user_id,
      create_time,
      finish_price,
      score,
      ma_id,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      #{ownerUserId,jdbcType=INTEGER},
      #{customerUserId,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP},
      #{finishPrice,jdbcType=DECIMAL},
      #{score,jdbcType=INTEGER},
      #{maId,jdbcType=INTEGER},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      owner_user_id = #{ownerUserId,jdbcType=INTEGER},
      customer_user_id = #{customerUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      finish_price = #{finishPrice,jdbcType=DECIMAL},
      score = #{score,jdbcType=INTEGER},
      ma_id = #{maId,jdbcType=INTEGER},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="order_id" keyProperty="orderId" parameterType="dam.jsoup.updatereport.updatreport.pojo.OrderJsoupMa" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into order_jsoup_ma
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="ownerUserId != null">
        owner_user_id,
      </if>
      <if test="customerUserId != null">
        customer_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="finishPrice != null">
        finish_price,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="maId != null">
        ma_id,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="ownerUserId != null">
        #{ownerUserId,jdbcType=INTEGER},
      </if>
      <if test="customerUserId != null">
        #{customerUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishPrice != null">
        #{finishPrice,jdbcType=DECIMAL},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="maId != null">
        #{maId,jdbcType=INTEGER},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="ownerUserId != null">
        owner_user_id = #{ownerUserId,jdbcType=INTEGER},
      </if>
      <if test="customerUserId != null">
        customer_user_id = #{customerUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishPrice != null">
        finish_price = #{finishPrice,jdbcType=DECIMAL},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="maId != null">
        ma_id = #{maId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
</mapper>