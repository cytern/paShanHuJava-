<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dam.jsoup.updatereport.updatreport.dao.SettingMapper">
  <resultMap id="BaseResultMap" type="dam.jsoup.updatereport.updatreport.pojo.Setting">
    <!--@mbg.generated-->
    <!--@Table setting-->
    <id column="setting_id" jdbcType="INTEGER" property="settingId" />
    <result column="setting_value" jdbcType="VARCHAR" property="settingValue" />
    <result column="bios_id" jdbcType="VARCHAR" property="biosId" />
    <result column="setting_type" jdbcType="VARCHAR" property="settingType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    setting_id, setting_value, bios_id, setting_type
  </sql>
  <select id="selectByExample" parameterType="dam.jsoup.updatereport.updatreport.pojo.SettingExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from setting
    where setting_id = #{settingId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from setting
    where setting_id = #{settingId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="dam.jsoup.updatereport.updatreport.pojo.SettingExample">
    <!--@mbg.generated-->
    delete from setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="dam.jsoup.updatereport.updatreport.pojo.Setting">
    <!--@mbg.generated-->
    insert into setting (setting_id, setting_value, bios_id, 
      setting_type)
    values (#{settingId,jdbcType=INTEGER}, #{settingValue,jdbcType=VARCHAR}, #{biosId,jdbcType=VARCHAR}, 
      #{settingType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="dam.jsoup.updatereport.updatreport.pojo.Setting">
    <!--@mbg.generated-->
    insert into setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="settingId != null">
        setting_id,
      </if>
      <if test="settingValue != null">
        setting_value,
      </if>
      <if test="biosId != null">
        bios_id,
      </if>
      <if test="settingType != null">
        setting_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="settingId != null">
        #{settingId,jdbcType=INTEGER},
      </if>
      <if test="settingValue != null">
        #{settingValue,jdbcType=VARCHAR},
      </if>
      <if test="biosId != null">
        #{biosId,jdbcType=VARCHAR},
      </if>
      <if test="settingType != null">
        #{settingType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="dam.jsoup.updatereport.updatreport.pojo.SettingExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update setting
    <set>
      <if test="record.settingId != null">
        setting_id = #{record.settingId,jdbcType=INTEGER},
      </if>
      <if test="record.settingValue != null">
        setting_value = #{record.settingValue,jdbcType=VARCHAR},
      </if>
      <if test="record.biosId != null">
        bios_id = #{record.biosId,jdbcType=VARCHAR},
      </if>
      <if test="record.settingType != null">
        setting_type = #{record.settingType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update setting
    set setting_id = #{record.settingId,jdbcType=INTEGER},
      setting_value = #{record.settingValue,jdbcType=VARCHAR},
      bios_id = #{record.biosId,jdbcType=VARCHAR},
      setting_type = #{record.settingType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="dam.jsoup.updatereport.updatreport.pojo.Setting">
    <!--@mbg.generated-->
    update setting
    <set>
      <if test="settingValue != null">
        setting_value = #{settingValue,jdbcType=VARCHAR},
      </if>
      <if test="biosId != null">
        bios_id = #{biosId,jdbcType=VARCHAR},
      </if>
      <if test="settingType != null">
        setting_type = #{settingType,jdbcType=VARCHAR},
      </if>
    </set>
    where setting_id = #{settingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="dam.jsoup.updatereport.updatreport.pojo.Setting">
    <!--@mbg.generated-->
    update setting
    set setting_value = #{settingValue,jdbcType=VARCHAR},
      bios_id = #{biosId,jdbcType=VARCHAR},
      setting_type = #{settingType,jdbcType=VARCHAR}
    where setting_id = #{settingId,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update setting
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="setting_value = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when setting_id = #{item.settingId,jdbcType=INTEGER} then #{item.settingValue,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="bios_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when setting_id = #{item.settingId,jdbcType=INTEGER} then #{item.biosId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="setting_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when setting_id = #{item.settingId,jdbcType=INTEGER} then #{item.settingType,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where setting_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.settingId,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into setting
    (setting_id, setting_value, bios_id, setting_type)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.settingId,jdbcType=INTEGER}, #{item.settingValue,jdbcType=VARCHAR}, #{item.biosId,jdbcType=VARCHAR}, 
        #{item.settingType,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="dam.jsoup.updatereport.updatreport.pojo.Setting">
    <!--@mbg.generated-->
    insert into setting
    (setting_id, setting_value, bios_id, setting_type)
    values
    (#{settingId,jdbcType=INTEGER}, #{settingValue,jdbcType=VARCHAR}, #{biosId,jdbcType=VARCHAR}, 
      #{settingType,jdbcType=VARCHAR})
    on duplicate key update 
    setting_id = #{settingId,jdbcType=INTEGER}, 
    setting_value = #{settingValue,jdbcType=VARCHAR}, 
    bios_id = #{biosId,jdbcType=VARCHAR}, 
    setting_type = #{settingType,jdbcType=VARCHAR}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="dam.jsoup.updatereport.updatreport.pojo.Setting">
    <!--@mbg.generated-->
    insert into setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="settingId != null">
        setting_id,
      </if>
      <if test="settingValue != null">
        setting_value,
      </if>
      <if test="biosId != null">
        bios_id,
      </if>
      <if test="settingType != null">
        setting_type,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="settingId != null">
        #{settingId,jdbcType=INTEGER},
      </if>
      <if test="settingValue != null">
        #{settingValue,jdbcType=VARCHAR},
      </if>
      <if test="biosId != null">
        #{biosId,jdbcType=VARCHAR},
      </if>
      <if test="settingType != null">
        #{settingType,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="settingId != null">
        setting_id = #{settingId,jdbcType=INTEGER},
      </if>
      <if test="settingValue != null">
        setting_value = #{settingValue,jdbcType=VARCHAR},
      </if>
      <if test="biosId != null">
        bios_id = #{biosId,jdbcType=VARCHAR},
      </if>
      <if test="settingType != null">
        setting_type = #{settingType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>