<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dam.jsoup.updatereport.updatreport.dao.JsoupUserMapper">
  <resultMap id="BaseResultMap" type="dam.jsoup.updatereport.updatreport.pojo.JsoupUser">
    <!--@mbg.generated-->
    <!--@Table jsoup_user-->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <id column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="user_token" jdbcType="VARCHAR" property="userToken" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    user_id, username, `password`, create_time, user_token, user_type
  </sql>
  <select id="selectByExample" parameterType="dam.jsoup.updatereport.updatreport.pojo.JsoupUserExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jsoup_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from jsoup_user
    where user_id = #{userId,jdbcType=INTEGER}
      and username = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    <!--@mbg.generated-->
    delete from jsoup_user
    where user_id = #{userId,jdbcType=INTEGER}
      and username = #{username,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="dam.jsoup.updatereport.updatreport.pojo.JsoupUserExample">
    <!--@mbg.generated-->
    delete from jsoup_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="dam.jsoup.updatereport.updatreport.pojo.JsoupUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into jsoup_user (username, `password`, create_time, 
      user_token, user_type)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{userToken,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="dam.jsoup.updatereport.updatreport.pojo.JsoupUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into jsoup_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="userToken != null">
        user_token,
      </if>
      <if test="userType != null">
        user_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userToken != null">
        #{userToken,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="dam.jsoup.updatereport.updatreport.pojo.JsoupUserExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from jsoup_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update jsoup_user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userToken != null">
        user_token = #{record.userToken,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update jsoup_user
    set user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      user_token = #{record.userToken,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="dam.jsoup.updatereport.updatreport.pojo.JsoupUser">
    <!--@mbg.generated-->
    update jsoup_user
    <set>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userToken != null">
        user_token = #{userToken,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
      and username = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="dam.jsoup.updatereport.updatreport.pojo.JsoupUser">
    <!--@mbg.generated-->
    update jsoup_user
    set `password` = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user_token = #{userToken,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
      and username = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update jsoup_user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="`password` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId,jdbcType=INTEGER} then #{item.password,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="user_token = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId,jdbcType=INTEGER} then #{item.userToken,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="user_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId,jdbcType=INTEGER} then #{item.userType,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where user_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.userId,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="user_id" keyProperty="userId" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into jsoup_user
    (username, `password`, create_time, user_token, user_type)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.username,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.userToken,jdbcType=VARCHAR}, #{item.userType,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="user_id" keyProperty="userId" parameterType="dam.jsoup.updatereport.updatreport.pojo.JsoupUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into jsoup_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      username,
      `password`,
      create_time,
      user_token,
      user_type,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      #{username,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{userToken,jdbcType=VARCHAR},
      #{userType,jdbcType=VARCHAR},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user_token = #{userToken,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="user_id" keyProperty="userId" parameterType="dam.jsoup.updatereport.updatreport.pojo.JsoupUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into jsoup_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="userToken != null">
        user_token,
      </if>
      <if test="userType != null">
        user_type,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userToken != null">
        #{userToken,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userToken != null">
        user_token = #{userToken,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>