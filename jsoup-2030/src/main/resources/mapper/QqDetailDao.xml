<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dam.jsoup.updatereport.updatreport.robot.dto.QqDetailDao">
  <resultMap id="BaseResultMap" type="dam.jsoup.updatereport.updatreport.robot.dto.QqDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="rel_qq_id" jdbcType="VARCHAR" property="relQqId" />
    <result column="form_name" jdbcType="VARCHAR" property="formName" />
    <result column="field_value" jdbcType="VARCHAR" property="fieldValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, rel_qq_id, form_name, field_value
  </sql>
  <select id="selectByExample" parameterType="dam.jsoup.updatereport.updatreport.robot.dto.QqDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from qq_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from qq_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from qq_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="dam.jsoup.updatereport.updatreport.robot.dto.QqDetailExample">
    delete from qq_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="dam.jsoup.updatereport.updatreport.robot.dto.QqDetail" useGeneratedKeys="true">
    insert into qq_detail (rel_qq_id, form_name, field_value
      )
    values (#{relQqId,jdbcType=INTEGER}, #{formName,jdbcType=VARCHAR}, #{fieldValue,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="dam.jsoup.updatereport.updatreport.robot.dto.QqDetail" useGeneratedKeys="true">
    insert into qq_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="relQqId != null">
        rel_qq_id,
      </if>
      <if test="formName != null">
        form_name,
      </if>
      <if test="fieldValue != null">
        field_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="relQqId != null">
        #{relQqId,jdbcType=INTEGER},
      </if>
      <if test="formName != null">
        #{formName,jdbcType=VARCHAR},
      </if>
      <if test="fieldValue != null">
        #{fieldValue,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="addAgeDataQQ" parameterType="dam.jsoup.updatereport.updatreport.robot.dto.QqAgeList">
    INSERT INTO `qq_age_list` ( `qq_id`, `group_id`, `type`, `rank`, `elo`, `match_times`, `win_rate`, `create_time`, `defult`, `age_name`)
     VALUES ( #{qqAgeList.qqId}, #{qqAgeList.groupId},  #{qqAgeList.type}, #{qqAgeList.rank},  #{qqAgeList.elo},  #{qqAgeList.matchTimes}, #{qqAgeList.winRate}, NOW(), #{qqAgeList.defult}, #{qqAgeList.ageName});
  </insert>
  <select id="countByExample" parameterType="dam.jsoup.updatereport.updatreport.robot.dto.QqDetailExample" resultType="java.lang.Long">
    select count(*) from qq_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="getAgeDataByQQIdAndType" resultType="com.alibaba.fastjson.JSONObject">
    SELECT e.place as 'groupRanks',d.qq_id as 'qqId',d.rank as 'rank',d.elo,d.match_times as 'matchTimes',d.type,d.win_rate as 'winRate',d.group_id as 'groupId'
    ,d.age_name as 'ageName'

    FROM (select a.id,count(b.id)+1 as place from qq_age_list a
                                                    left join qq_age_list b
                                                              on a.rank > b.rank group by a.id
         ) as e
           LEFT JOIN qq_age_list as d on e.id = d.id
    WHERE d.qq_id = #{qqId} AND d.type = #{type}
  </select>
  <select id="getAgeDataDefultQQ" resultType="com.alibaba.fastjson.JSONObject">
    SELECT e.place as 'groupRanks',d.qq_id as 'qqId',d.rank as 'rank',d.elo,d.match_times as 'matchTimes',d.type,d.win_rate as 'winRate',d.group_id as 'groupId'
    ,d.age_name as 'ageName'
    FROM (select a.id,count(b.id)+1 as place from qq_age_list a
                                                    left join qq_age_list b
                                                              on a.rank > b.rank group by a.id
         ) as e
           LEFT JOIN qq_age_list as d on e.id = d.id
    WHERE d.qq_id = #{qqId} AND d.defult = 1
  </select>
  <select id="getAgeDataByQQId" resultType="com.alibaba.fastjson.JSONObject">
    SELECT e.place as 'groupRanks',d.qq_id as 'qqId',d.rank as 'rank',d.elo,d.match_times as 'matchTimes',d.type,d.win_rate as 'winRate',d.group_id as 'groupId'
    ,d.age_name as 'ageName'
    FROM (select a.id,count(b.id)+1 as place from qq_age_list a
                                                    left join qq_age_list b
                                                              on a.rank > b.rank group by a.id
         ) as e
           LEFT JOIN qq_age_list as d on e.id = d.id
    WHERE d.qq_id = #{qqId}
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update qq_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.relQqId != null">
        rel_qq_id = #{record.relQqId,jdbcType=INTEGER},
      </if>
      <if test="record.formName != null">
        form_name = #{record.formName,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldValue != null">
        field_value = #{record.fieldValue,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update qq_detail
    set id = #{record.id,jdbcType=INTEGER},
      rel_qq_id = #{record.relQqId,jdbcType=INTEGER},
      form_name = #{record.formName,jdbcType=VARCHAR},
      field_value = #{record.fieldValue,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="dam.jsoup.updatereport.updatreport.robot.dto.QqDetail">
    update qq_detail
    <set>
      <if test="relQqId != null">
        rel_qq_id = #{relQqId,jdbcType=INTEGER},
      </if>
      <if test="formName != null">
        form_name = #{formName,jdbcType=VARCHAR},
      </if>
      <if test="fieldValue != null">
        field_value = #{fieldValue,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="dam.jsoup.updatereport.updatreport.robot.dto.QqDetail">
    update qq_detail
    set rel_qq_id = #{relQqId,jdbcType=INTEGER},
      form_name = #{formName,jdbcType=VARCHAR},
      field_value = #{fieldValue,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>